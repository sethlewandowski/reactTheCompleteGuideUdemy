For functional expressions, use UseEffect and useState

useEffect() can be tricky

useEffect(()=> {
    ...

}, [dependencies that trigger useEffect changes])

if dependencies array is empty, it will only run once 

arrays & objs are reference types 
else are primitive types 

rendering green flashing offered by chrome to show what's getting re-rendered

React.memo() used to reduce rerendering to improve performance in react functional expressions

React.memo / componentShouldUpdate are equals for different component types

PureComponent?
- normal component that already implements shoudlComponentUpdate

How React Updates the DOM
- render is called
then react compares virtual dom to re-rendered virtual dom
if there are differences, then react updates the real dom 
it does this because it's faster and easier to compare virtual doms than real doms (Document Object Model)
accessing the real dom is SLOW
